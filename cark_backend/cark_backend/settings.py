"""
Django settings for cark_backend project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=36500),  # 100 سنة
    'REFRESH_TOKEN_LIFETIME': timedelta(days=36500),  # 100 سنة
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': True,
}




BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# المسار الفيزيائي اللي هتتحفظ فيه الملفات المرفوعة
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# ال URL اللي المستخدم هيستخدمه عشان يوصل للملفات (تقدر تغيره لو عاوز)
MEDIA_URL = '/media/'




# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-wdrw4evzj4_z)fr2^r&ec6dewdiql&&%94e6%szhl*_m4^24+q'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    "localhost",
    "127.0.0.1",
    "salt-claire-trek-book.trycloudflare.com",
    
]


# Application definition

INSTALLED_APPS = [
    # التطبيقات الأساسية
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework', 
    'django_extensions',
    
    # التطبيقات الخاصة بنا
    'users',
    'cars',
    'documents.apps.DocumentsConfig',
    'rentals',
    'selfdrive_rentals',
    'payments',
    'wallets',
    'feedback',
    'notifications',
    
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'cark_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'cark_backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'cark-V1',
        'USER': 'root',
        'PASSWORD': '',
        'HOST': 'localhost',
        'PORT': '3306',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'users.User'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,  # عدد الإشعارات في كل صفحة
}

PAYMOB_API_KEY = "ZXlKaGJHY2lPaUpJVXpVeE1pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SmpiR0Z6Y3lJNklrMWxjbU5vWVc1MElpd2ljSEp2Wm1sc1pWOXdheUk2TVRBMU5EZzFOeXdpYm1GdFpTSTZJbWx1YVhScFlXd2lmUS5mYlNUNHN1TV8yTXhJRTBHek9RTkktVGs1NWF4djd0cmJYQlJRUDFyc2dNSWh6bzJMYnpNdlBacnB4NzRqa2xkcExEQTFHU1hyUklFVkc2OWJjNDFGUQ=="
PAYMOB_BASE_URL = "https://accept.paymob.com/api"
#PAYMOB_INTENTION_BASE_URL = "https://flashapi.paymob.com"
# PAYMOB_INTEGRATION_ID_WALLET = "5165985"
PAYMOB_INTEGRATION_ID_CARD = "5149124"
PAYMOB_INTEGRATION_ID_SAVED_CARD = "5149124"  # نفس integration ID للكارت المحفوظ
PAYMOB_IFRAME_ID = "933671"
PAYMOB_HMAC_SECRET = "BCA25D42BBFBC1AD1A09AEFF78FDECE0"
PAYMOB_INTEGRATION_ID_MOTO = "5168455"

PAYMOB_REDIRECT_URL = "https://accept.paymobsolutions.com/api/acceptance/post_pay"

# Firebase Cloud Messaging Settings
FCM_SERVER_KEY = "YOUR_FCM_SERVER_KEY_HERE"  # ضع هنا Server Key من Firebase Console
FCM_PROJECT_ID = "cark-app"  # ضع هنا Project ID من Firebase Console
# Notifications Settings
NOTIFICATIONS_SETTINGS = {
    'DEFAULT_FROM_EMAIL': 'noreply@cark.com',
    'EMAIL_BACKEND': 'django.core.mail.backends.console.EmailBackend',  # للتطوير
    'SMS_BACKEND': 'console',  # يمكن تغييره لاحقاً
    'BATCH_SIZE': 100,  # عدد الإشعارات المرسلة في كل دفعة
    'RETRY_ATTEMPTS': 3,  # عدد المحاولات عند فشل الإرسال
}

# Logging Configuration
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': 'notifications.log',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'notifications': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}
